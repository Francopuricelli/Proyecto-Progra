<!DOCTYPE html>
<html lang="es">
<head>
  <meta charset="UTF-8">
  <title>Home</title>
  <link rel="stylesheet" href="/admin-panel.css">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet"/>
  <script src="https://kit.fontawesome.com/1820af2c0e.js" crossorigin="anonymous"></script>
</head>
<body>
  <%- include("partials/navbar.ejs") %>

<main class="container mt-5">

    <div class="d-flex justify-content-between align-items-center mb-4">
      <h2 class="text-white">Gestión de Productos</h2>
      <a href="/api/views/admin-create" class="btn btn-warning text-dark fw-bold">
        <i class="fas fa-plus"></i> Agregar producto
      </a>
    </div>

    <div class="table-responsive rounded-3 overflow-hidden">
      <table class="table table-dark table-hover align-middle mb-0">
        <thead class="table-light text-dark">
          <tr>
            <th>Nombre</th>
            <th>Precio</th>
            <th>Stock</th>
            <th>Plataforma</th>
            <th>Estado</th>
            <th class="text-center">Acciones</th>
          </tr>
        </thead>
        <tbody>
          <% products.forEach(product => { %>
            <tr data-id="<%= product.id %>">
              <td><%= product.nombre %></td>
              <td>$<%= product.precio %></td>
              <td><%= product.stock %></td>
              <td><%= product.plataforma %></td>
              <td>
                <span class="badge <%= product.activo ? 'bg-success' : 'bg-secondary' %>"> 
                  <%= product.activo ? 'Activo' : 'Inactivo' %>
                </span>
              </td>
              <td class="text-center">
                <a href="/api/views/admin-edit/<%= product.id %>" class="btn btn-sm btn-outline-info me-1" title="Editar">
                  <i class="fas fa-edit"></i>
                </a>
                <button 
                  class="btn btn-sm me-1 toggle-btn <%= product.activo ? 'btn-outline-secondary' : 'btn-outline-success' %>" 
                  data-id="<%= product.id %>" 
                  title="<%= product.activo ? 'Desactivar' : 'Activar' %>"
                >
                  <i class="fas <%= product.activo ? 'fa-times' : 'fa-check' %>"></i>
                </button>
                <button 
                  class="btn btn-sm btn-outline-danger delete-btn" 
                  data-id="<%= product.id %>" 
                  title="Eliminar"
                >
                  <i class="fas fa-trash-alt"></i>
                </button>
              </td>
            </tr>
          <% }); %>
        </tbody>
      </table>
    </div>

  </main>

  <%- include("partials/footer.ejs") %>

</body>
<script>
const toggleButtons = document.querySelectorAll('.toggle-btn');
const deleteButtons = document.querySelectorAll('.delete-btn');
  toggleButtons.forEach(button => {
    button.addEventListener('click', async (e) => {
      e.preventDefault();

      const productId = button.dataset.id;
      const tr = button.closest('tr'); 
      const badge = tr.querySelector('td:nth-child(5) .badge');

      try {
        const response = await fetch(`/api/products/${productId}/toggle`, {
          method: 'PATCH',
          headers: { 'Content-Type': 'application/json' }
        });

        if (response.ok) {
          const updatedProduct = await response.json();

          // Actualizar badge
          if (updatedProduct.activo) {
            badge.classList.remove('bg-secondary');
            badge.classList.add('bg-success');
            badge.textContent = 'Activo';

            // Cambiar botón para desactivar
            button.title = 'Desactivar';
            button.querySelector('i').className = 'fas fa-times';
            button.classList.remove('btn-outline-success');
            button.classList.add('btn-outline-secondary');
          } else {
            badge.classList.remove('bg-success');
            badge.classList.add('bg-secondary');
            badge.textContent = 'Inactivo';

            // Cambiar botón para activar
            button.title = 'Activar';
            button.querySelector('i').className = 'fas fa-check';
            button.classList.remove('btn-outline-secondary');
            button.classList.add('btn-outline-success');
          }

        } else {
          alert('Error al cambiar estado del producto.');
        }
      } catch (error) {
        console.error('Error en la petición:', error);
        alert('Error en la conexión.');
      }
    });
  });

deleteButtons.forEach(button => {
    button.addEventListener('click', async (e) => {
      e.preventDefault();

      const productId = button.dataset.id;
      const tr = button.closest('tr');


      try {
        const response = await fetch(`/api/products/${productId}`, {
          method: 'DELETE',
        });

        if (!response.ok) throw new Error('Error en el servidor');

        // Eliminar fila de la tabla
        tr.remove();
        alert('Producto eliminado correctamente.');
      } catch (error) {
        console.error('Error al eliminar producto:', error);
        alert('No se pudo eliminar el producto.');
      }
    });
  });

</script>
</html>
